---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app radarr
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: ghcr.io/onedr0p/radarr-develop
      tag: 4.4.2.6956@sha256:900277ef469bcb21cf24963c39b17e0f1a5e64a445b8a9d6ee80750807911339
    env:
      TZ: ${TIMEZONE}
      PUSHOVER_DEBUG: "false"
      PUSHOVER_APP_URL: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
      RADARR__INSTANCE_NAME: Radarr
      RADARR__PORT: &port 80
      RADARR__APPLICATION_URL: "https://{{ .Release.Name }}.${SECRET_DOMAIN}"
      RADARR__LOG_LEVEL: info
    envFrom:
      - secretRef:
          name: radarr-secret
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          external-dns.home.arpa/enabled: "true"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.devbu.io/css/base/radarr/nord.css"></head>';
            sub_filter_once on;
          hajimari.io/icon: mdi:filmstrip
        hosts:
          - host: *host
            paths:
              - path: /
                pathType: Prefix
          - host: &host-local "{{ .Release.Name }}.${LOCAL_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
          - hosts:
              - *host-local
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups: [10000]
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: ceph-block
        labels:
          snapshot.home.arpa/enabled: "true"
    persistence:
      series:
        enabled: true
        type: nfs
        server: server-pc.lan
        path: ${SERIES_PATH}
        mountPath: /series
      movies:
        enabled: true
        type: nfs
        server: server-pc.lan
        path: ${MOVIES_PATH}
        mountPath: /movies
      downloads:
        enabled: true
        type: nfs
        server: server-pc.lan
        path: ${DOWNLOADS_PATH}
        mountPath: /downloads
      pushover-notify:
        enabled: true
        type: configMap
        name: radarr-configmap-pushover
        subPath: pushover-notify.sh
        mountPath: /scripts/pushover-notify.sh
        defaultMode: 0775
        readOnly: true
      alexa-notify:
        enabled: true
        type: configMap
        name: radarr-configmap-alexa
        subPath: alexa-notifier.sh
        mountPath: /scripts/alexa-notifier.sh
        defaultMode: 0775
        readOnly: true
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 2000Mi
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: arr
                  operator: In
                  values:
                    - "true"
