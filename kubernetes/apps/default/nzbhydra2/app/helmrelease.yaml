---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app nzbhydra2
  namespace: default
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: nzbhydra2
      version: 10.4.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: linuxserver/nzbhydra2
      tag: 5.1.7
    env:
      TZ: "${TIMEZONE}"
    service:
      main:
        ports:
          http:
            port: &port 5076
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          external-dns.home.arpa/enabled: "true"
          hajimari.io/icon: mdi:cloud-download
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
          - host: &host-local "{{ .Release.Name }}.${LOCAL_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
          - hosts:
              - *host-local
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: ceph-block
        labels:
          snapshot.home.arpa/enabled: "true"
    probes:
# -- Configures the probes for the main Pod.
# @default -- See values.yaml
probes:
  liveness:
    custom: true
    enabled: true
    spec:
      failureThreshold: 5
      httpGet:
        path: /actuator/health/livenessState
        port: *port
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 10
  readiness:
    custom: true
    enabled: true
    spec:
      failureThreshold: 5
      httpGet:
        path: /actuator/health/readinessState
        port: *port
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 10
  startup:
    custom: true
    enabled: true
    spec:
      failureThreshold: 5
      httpGet:
        path: /actuator/health/readinessState
        port: *port
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 10
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: arr
                  operator: In
                  values:
                    - "true"
