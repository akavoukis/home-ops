---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app tvheadend
  namespace: media
  labels:
    component.kutara.io/part-of: standard-helm-release
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 1.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
    global:
      nameOverride: *app
    image:
      repository: ghcr.io/onedr0p/tvheadend
      tag: 4.3.9990@sha256:05fd10d774f1282e32a6c4688dba62305fe8e5bc0d3e084fcadfa0c2839cfcb2
    env:
      TZ: ${TIMEZONE}
    service:
      main:
        type: LoadBalancer
        externalIPs:
          - "${SVC_TVHEADEND_ADDR}"
        externalTrafficPolicy: Local
        ports:
          http:
            port: 9981
          htsp:
            port: 9982
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          external-dns.home.arpa/enabled: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "television"
          hajimari.io/group: "media"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            send_timeout 100m;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
          - host: &host-local "{{ .Release.Name }}.${LOCAL_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
          - hosts:
              - *host-local
    securityContext:
      privileged: true
    #securityContext:
    #  seLinuxOptions:
    #    level: s0
    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 44
        - 109
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: ceph-block
        labels:
          snapshot.home.arpa/enabled: "true"
    persistence:
      dvb:
        enabled: true
        type: hostPath
        mountPath: /dev/dvb
        hostPath: /dev/dvb
      dri:
        enabled: true
        type: hostPath
        mountPath: /dev/dri
        hostPath: /dev/dri
      downloads:
        enabled: true
        type: nfs
        server: server-pc.lan
        path: ${DOWNLOADS_PATH}
        mountPath: /recordings
      # recordings:
      #   enabled: true
      #   existingClaim: media-v2
      #   mountPath: /recordings
      # timeshift:
      #   enabled: true
      #   type: emptyDir
      #   mountPath: /timeshift
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                    - "tv-server"
    resources:
      requests:
        # gpu.intel.com/i915: 1
        cpu: 100m
        memory: 20Mi
      limits:
        # gpu.intel.com/i915: 1
        cpu: 2000m
        memory: 2096Mi
