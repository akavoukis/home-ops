---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 5m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.10.11
      sourceRef:
        kind: HelmRepository
        name: rook-ceph
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph
      namespace: rook-ceph
  values:
    monitoring:
      # TODO enable monitoring enabled: true
      enabled: true
      # createPrometheusRules: true
      createPrometheusRules: false
    ingress:
      dashboard:
        ingressClassName: nginx
        annotations:
          hajimari.io/appName: "Rook"
          hajimari.io/icon: mdi:chess-rook
          hajimari.io/enable: "true"
        hosts:
          - host: &host "rook-ceph.${LOCAL_DOMAIN}"
            path: /
        tls:
          - hosts:
              - *host
    toolbox:
      enabled: false
    configOverride: |
      [global]
      bdev_enable_discard = true
      bdev_async_discard = true
    cephClusterSpec:
      # mon:
      #  count: 2
      network:
        provider: host
      #  connections:
      #    compression:
      #      # TODO: Test out enabling this on next cluster rebuild
      #      enabled: false
      crashCollector:
        disable: false
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: true
      storage:
        useAllNodes: false
        useAllDevices: false
        config:
          osdsPerDevice: "1"
        nodes:
          - name: mini-pc
            logicalDevices:
              - volume: rook-ceph
                volumeGroup: vgubuntu
      resources:
        api:
          requests:
            cpu: "50m"
            memory: "512Mi"
          limits:
            cpu: "100m"
            memory: "512Mi"
        mgr:
          requests:
            cpu: "50m"
            memory: "512Mi"
          limits:
            cpu: "100m"
            memory: "512Mi"
        mon:
          requests:
            cpu: "50m"
            memory: "512Mi"
          limits:
            cpu: "100m"
            memory: "512Mi"
        osd:
          requests:
            cpu: "50m"
            memory: "512Mi"
          limits:
            cpu: "100m"
            memory: "512Mi"
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: &replicas 1
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
#    cephFileSystems:
#      - name: ceph-filesystem
#        spec:
#          metadataPool:
#            replicated:
#              size: *replicas
#          dataPools:
#            - failureDomain: host
#              replicated:
#                size: *replicas
#              name: data0
#          metadataServer:
#            activeCount: 1
#            activeStandby: true
#            resources:
#              requests:
#                cpu: 10m
#                memory: 1Gi
#              limits:
#                cpu: 20m
#                memory: 2Gi
#        storageClass:
#          enabled: true
#          isDefault: false
#          name: ceph-filesystem
#          pool: data0
#          reclaimPolicy: Delete
#          allowVolumeExpansion: true
#          parameters:
#            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
#            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
#            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
#            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
#            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
#            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
#            csi.storage.k8s.io/fstype: ext4
#    cephObjectStores:
#      - name: ceph-objectstore
#        spec:
#          metadataPool:
#            failureDomain: host
#            replicated:
#              size: *replicas
#          dataPool:
#            failureDomain: host
#            erasureCoded:
#              dataChunks: 2
#              codingChunks: 1
#          preservePoolsOnDelete: true
#          gateway:
#            port: 80
#            resources:
#              requests:
#                cpu: 10m
#                memory: 1Gi
#              limits:
#                cpu: 20m
#                memory: 2Gi
#            instances: 1
#          healthCheck:
#            bucket:
#              interval: 60s
#        storageClass:
#          enabled: true
#          name: ceph-bucket
#          reclaimPolicy: Delete
#          parameters:
#            region: us-east-1
